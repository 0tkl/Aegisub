name: macOS Build & Package

on:
  push:
    branches:
      - master
      - feature
      - cibuilds
    paths: 
      - '**'
      - '!.github/workflows/**'
      - '.github/workflows/macos.yml'
      - '!docs/**'
      - '!packages/**'
      - 'packages/meson.build'
      - 'packages/desktop/**'
      - 'packages/osx_**'
      - '!tools/win-installer-**'
  pull_request:
    branches:
      - master
      - feature
    paths: 
      - '**'
      - '!.github/workflows/**'
      - '.github/workflows/macos.yml'
      - '!docs/**'
      - '!packages/**'
      - 'packages/meson.build'
      - 'packages/desktop/**'
      - 'packages/osx_**'
      - '!tools/win-installer-**'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14]
        extra-args: ['', "-Dwx_version='3.3.0'"]
        include:
          - buildtype: release
          - base-args: >-
              -Ddefault_library=static
              -Dbuild_osx_bundle=true
              -Dbestsource=enabled
              -Dvapoursynth=enabled
              --force-fallback-for=ffms2

          - os: macos-13
            prefix: "/usr/local/Cellar"
          - os: macos-14
            prefix: "/opt/homebrew/Cellar"
          
          - name: x86-64 Release
            os: macos-13
            extra-args: ''
          - name: arm64 Release
            os: macos-14
            extra-args: ''
          - name: x86-64 Release (wx master)
            os: macos-13
            extra-args: "-Dwx_version='3.3.0'"
          - name: arm64 Release (wx master)
            os: macos-14
            extra-args: "-Dwx_version='3.3.0'"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # copied from gha workflow in meson repo
      # github actions overwrites brew's python. Force it to reassert itself, by running in a separate step.
      - name: Unbreak Python in GitHub Actions
        run: |
          brew update
          find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
          sudo rm -rf /Library/Frameworks/Python.framework/
          brew install --force python3 && brew unlink python3 && brew unlink python3 && brew link --overwrite python3

      - name: Setup Meson
        run: pipx install meson

      - name: Install dependencies
        run: |
          brew install luarocks
          sudo luarocks install moonscript --dev
          brew install ninja nasm boost libass
          brew install --HEAD ffms2
          brew install zlib fftw hunspell
          brew install pulseaudio  # NO OpenAL in github CI

      - name: set up MacOS env
        run: |
          ls -l ${{matrix.prefix}}/icu4c/
          ls -l ${{matrix.prefix}}/gettext/
          # Changes are only available in the following steps, not the current one
          echo 'CPPFLAGS=-I/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I${{matrix.prefix}}/gettext/0.22.5/include' >> $GITHUB_ENV
          echo 'LDFLAGS=-L${{matrix.prefix}}/gettext/0.22.5/lib' >> $GITHUB_ENV
          echo 'PKG_CONFIG_PATH=${{matrix.prefix}}/icu4c/74.2/lib/pkgconfig' >> $GITHUB_ENV
          echo 'ACLOCAL_PATH=${{matrix.prefix}}/gettext/0.22.5/share/aclocal'  >> $GITHUB_ENV
          # Prepend to $PATH
          echo "${{matrix.prefix}}/icu4c/74.2/bin"   >> $GITHUB_PATH
          echo "${{matrix.prefix}}/icu4c/74.2/sbin"  >> $GITHUB_PATH
          echo "${{matrix.prefix}}/gettext/0.22.5/bin" >> $GITHUB_PATH

      - name: Configure
        run: |
          meson setup build ${{ matrix.base-args }} ${{ matrix.extra-args }} -Dbuildtype=${{ matrix.buildtype }}
          meson configure build

      - name: Build
        run: meson compile -C build

      - name: Run test
        run: meson test -C build --verbose "gtest main"

      # macOS artifacts
      - name: Generate macOS installer
        run: |
          meson compile osx-bundle -C build
          meson compile osx-build-dmg -C build

      - name: Upload artifacts - macOS dmg
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }} - installer
          path: build/Aegisub-*.dmg
          if-no-files-found: error
