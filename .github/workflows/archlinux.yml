name: Meson CI for Non-Ubuntu Distros

on:
  push:
    branches:
      - master
      - feature
      - cibuilds
    paths-ignore: 
      - ".github/workflows/ci.yml"
  pull_request:
    branches:
      - master
      - feature
    paths-ignore: 
      - ".github/workflows/ci.yml"    

jobs:
  build:
    name: ${{ matrix.name }}, ${{ matrix.buildtype }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}

    strategy:
      fail-fast: false
      matrix:
        container: ["archlinux:base-devel", "debian:bookworm-slim", "debian:trixie-slim", "ubuntu:rolling", "fedora:latest", "fedora:rawhide", "opensuse/leap:latest", "opensuse/leap:15.6", "opensuse/tumbleweed:latest"]
        buildtype: [release, debug]
        include:
          - name: Archlinux
            container: archlinux:base-devel
            ffmpeg61: true
          - group: deb
            name: Debian Bookworm
            container: debian:bookworm-slim
            ffmpeg61: false
          - group: deb
            name: Debian Trixie
            container: debian:trixie-slim
            ffmpeg61: true
          - group: deb
            name: Ubuntu 22.10
            container: ubuntu:rolling
            ffmpeg61: false
          - group: rh
            name: Fedora Latest
            container: fedora:latest
            ffmpeg61: false
          - group: rh
            name: Fedora Rawhide
            container: fedora:rawhide
            ffmpeg61: true
          - group: suse
            name: openSUSE Leap 15.5
            container: opensuse/leap:latest
            ffmpeg61: false
          - group: suse
            name: openSUSE Leap 15.6
            container: opensuse/leap:15.6
            ffmpeg61: true
          - group: suse
            name: openSUSE Tumbleweed
            container: opensuse/tumbleweed:latest
            ffmpeg61: true
          - args: >-
              --prefix=/usr
              -Ddefault_audio_output=PulseAudio
              -Davisynth=enabled
              -Dbestsource=enabled
              -Dffms2=enabled
              -Dffmpeg:default_library=shared
              -Dffmpeg:gpl=enabled
              -Dffmpeg:version3=enabled
              -Dffmpeg:avisynth=enabled
              -Dffmpeg:libass=enabled
              -Dffmpeg:libopus=enabled
              -Dvapoursynth=enabled

    steps:
      - name: Prerequisites 1 (Arch Linux)
        if: contains(matrix.container, 'archlinux')
        run: pacman --noconfirm -Syu cmake git
      
      - name: Prerequisites 1 (Debian & Ubuntu)
        if: matrix.group == 'deb'
        run: |
          apt-get update
          apt-get install --no-install-recommends -y \
          cmake git curl ca-certificates sudo \
          build-essential \
          autoconf automake libtool gettext libgettextpo-dev
      
      - name: Prerequisites 1 (Fedora)
        if: matrix.group == 'rh'
        run: |
          dnf -y clean all
          dnf -y update
          dnf -y group install --skip-broken \
          "C Development Tools and Libraries"
          dnf -y install cmake git curl sudo libtool gettext

      - name: openSUSE Leap 15.5 Add Repos
        if: matrix.container == 'opensuse/leap:latest'
        run: |
          zypper addrepo -f https://download.opensuse.org/repositories/devel:/libraries:/c_c++/15.5/devel:libraries:c_c++.repo
          zypper addrepo -f https://download.opensuse.org/repositories/devel:/tools:/building/15.5/devel:tools:building.repo
          zypper addrepo -f https://download.opensuse.org/repositories/multimedia:/libs/15.5/multimedia:libs.repo

      - name: openSUSE Leap 15.6 Add Repos
        if: matrix.container == 'opensuse/leap:15.6'
        run: |
          zypper addrepo -f https://download.opensuse.org/repositories/devel:/libraries:/c_c++/15.6/devel:libraries:c_c++.repo
          zypper addrepo -f https://download.opensuse.org/repositories/devel:/tools:/building/15.6/devel:tools:building.repo
          zypper addrepo -f https://download.opensuse.org/repositories/multimedia:/libs/15.6/multimedia:libs.repo

      - name: Prerequisites 1 (openSUSE)
        if: matrix.group == 'suse'
        run: |
          zypper clean --all
          zypper lr -d
          zypper --gpg-auto-import-keys refresh
          zypper update -y
          zypper install -y -t pattern devel_C_C++
          zypper install -y gcc13 gcc13-c++
          zypper install -y cmake git curl sudo libtool gettext-runtime

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prerequisites 2
        run: git config --global --add safe.directory '/__w/Aegisub/Aegisub'

      - name: Install dependencies (Arch Linux)
        if: contains(matrix.container, 'archlinux')
        run: |
          pacman --noconfirm -Syu wireplumber
          pacman --noconfirm -Sy pipewire-jack
          pacman --noconfirm -Sy avisynthplus boost ffmpeg fftw \
          fontconfig hunspell libass libglvnd meson openal portaudio \
          python pulseaudio uchardet vapoursynth wxwidgets-gtk3
      
      - name: Install dependencies (Debian & Ubuntu)
        if: matrix.group == 'deb'
        run: |
          apt-get install -y pkg-config
          apt-get install --no-install-recommends -y meson ninja-build \
          libx11-dev libfreetype6-dev libfontconfig1-dev \
          libnotify-dev libass-dev libasound2-dev intltool \
          libboost-all-dev libhunspell-dev libuchardet-dev \
          libpulse-dev libopenal-dev libjansson-dev libfftw3-dev nasm \
          libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev \
          libavutil-dev libpostproc-dev libswresample-dev libswscale-dev \
          libopus-dev \
          libwxbase3.2-1 libwxgtk-gl3.2-1 libwxgtk3.2-1 libwxgtk3.2-dev \
          wx-common wx3.2-headers wx3.2-i18n

      - name: Install dependencies (Fedora)
        if: matrix.group == 'rh'
        run: |
          dnf -y install pkgconf-pkg-config
          dnf -y install --skip-broken meson ninja-build libX11 freetype nasm \
          fontconfig-devel libnotify-devel libass-devel intltool zlib-devel \
          boost-devel hunspell-devel uchardet-devel pulseaudio-libs-devel \
          fftw-devel openal-soft jansson-devel luajit-devel wxGTK-devel \
          ffmpeg-free-devel opus-devel

      # - name: Install dependencies (openSUSE Leap)
      #   if: startsWith(matrix.container, 'opensuse/leap')
      #   run: |
      #     zypper install -y python311 python-pip
      #     python3 -m pip install --upgrade pip
      #     python3 -m pip install meson
      #     zypper install -y libopus-devel

# libboost_chrono1_66_0-devel \
# libboost_headers1_66_0-devel \
# libboost_filesystem1_66_0-devel \
# libboost_locale1_66_0-devel \
# libboost_regex1_66_0-devel \
# libboost_program_options1_66_0-devel \
      
      - name: Install dependencies (openSUSE Tumbleweed)
        if: startsWith(matrix.container, 'opensuse/tumbleweed')
        run: zypper install -y pkgconf-pkg-config

      - name: Install dependencies (openSUSE)
        if: matrix.group == 'suse'
        run: |
          zypper install -y libboost_chrono1_84_0-devel \
          libboost_headers1_84_0-devel \
          libboost_filesystem1_84_0-devel \
          libboost_locale1_84_0-devel \
          libboost_regex1_84_0-devel \
          libboost_program_options1_84_0-devel
          zypper install -y meson ninja libX11-6 libfreetype6 nasm \
          libfontconfig1 libnotify-devel libass-devel intltool zlib-devel \
          hunspell-devel libuchardet-devel libpulse-devel \
          fftw3-devel openal-soft-devel libjansson-devel luajit-devel \
          wxGTK3-3_2-devel vapoursynth-devel
          zypper install -y ffmpeg-6-libavcodec-devel ffmpeg-6-libavdevice-devel \
          ffmpeg-6-libavfilter-devel ffmpeg-6-libavformat-devel \
          ffmpeg-6-libavutil-devel ffmpeg-6-libpostproc-devel \
          ffmpeg-6-libswresample-devel ffmpeg-6-libswscale-devel

      - name: Add non-root user
        run: |
          cat /etc/passwd
          USERNAME=user1
          USER_UID=1001
          USER_GID=$USER_UID
          groupadd --gid $USER_GID $USERNAME
          useradd --uid $USER_UID --gid $USER_GID -m $USERNAME
          echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME
          chmod 0440 /etc/sudoers.d/$USERNAME
          chown -R $USERNAME:$USER_GID /__w/Aegisub/Aegisub
        
      - name: Download some other dependencies
        run: |
          cd subprojects
          sudo -u user1 git clone --depth=1 -b 3.7 https://github.com/AviSynth/AviSynthPlus.git
          mv AviSynthPlus avisynth
          sudo -u user1 git clone --recursive --depth=1 -b R1 https://github.com/vapoursynth/bestsource.git
          patch --directory=./bestsource --forward --strip=1 < ./packagefiles/bestsource/0001.patch
          sudo -u user1 git clone --depth=1 -b 5.0-RC3 https://github.com/FFMS/ffms2.git
          sudo -u user1 git clone --depth=1 https://github.com/LuaJIT/LuaJIT.git
          mv LuaJIT luajit
          sudo -u user1 mkdir packagecache
          cd packagecache
          sudo -u user1 curl -o gtest-1.14.0.tar.gz -L https://github.com/google/googletest/archive/refs/tags/v1.14.0.tar.gz
          sudo -u user1 curl -o gtest_1.14.0-1_patch.zip -L https://wrapdb.mesonbuild.com/v2/gtest_1.14.0-1/get_patch
          cd ../..
          sudo -u user1 meson subprojects packagefiles --apply avisynth
          sudo -u user1 meson subprojects packagefiles --apply bestsource
          sudo -u user1 meson subprojects packagefiles --apply ffms2
          sudo -u user1 meson subprojects packagefiles --apply luajit

      - name: Download FFmpeg
        if: matrix.ffmpeg61 == false
        run: |
          cd subprojects
          sudo -u user1 git clone --depth=1 -b meson-6.1 https://gitlab.freedesktop.org/gstreamer/meson-ports/ffmpeg.git
          patch --directory=./ffmpeg --forward --strip=1 < ./packagefiles/ffmpeg/0001.patch
          cd ..
          sudo -u user1 meson subprojects packagefiles --apply ffmpeg

      - name: Configure
        if: ${{ ! startsWith(matrix.container, 'opensuse/leap') }}
        run: |
          C_FLAGS="-Wall -Wextra -Wpedantic"
          CXX_FLAGS="-Wall -Wextra -Wpedantic"
          sudo -u user1 meson setup build ${{ matrix.args }} -Dcpp_std=c++2a -Dbuildtype=${{ matrix.buildtype }}

      - name: Configure (openSUSE Leap)
        if: startsWith(matrix.container, 'opensuse/leap')
        run: |
          C_FLAGS="-Wall -Wextra -Wpedantic"
          CXX_FLAGS="-Wall -Wextra -Wpedantic"
          sudo -u user1 CC=/usr/bin/gcc-13 CXX=/usr/bin/g++-13 meson setup build ${{ matrix.args }} -Dcpp_std=c++2a -Dbuildtype=${{ matrix.buildtype }}

      - name: Build
        run: sudo -u user1 meson compile -C build
      
      - name: Run test
        run: sudo -u user1 meson test -C build --verbose "gtest main"

      - name: Generate Package
        run: |
          mkdir -p pkgdir
          meson install -C build --destdir=../pkgdir
          ls -Ral pkgdir
